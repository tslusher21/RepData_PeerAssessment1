find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtoos()
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KermSmooth)
find.package("KernSmooth")
library(KernSmooth)
x<-c("a","b","c","d")
for(i in seq_along(x)){
print(x[i])
}
help(seq_along)
seq_len(x)
for(letter in x){
print(letter)
}
for(letter in x){
print(letter)
}
x<-matrix(1:5,2,3)
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i,j])
}
}
x<-matrix(1:6,2,3)
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i,j])
}
}
while(z>=3 && z<=10){
prin(z)
coin<-rbinom(1,1,.5)
if(coin==1){
z<-z+1
} else{
z<-z-1
}
}
z<-5
while(z>=3 && z<=10){
prin(z)
coin<-rbinom(1,1,.5)
if(coin==1){
z<-z+1
} else{
z<-z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
if(coin==1){
z<-z+1
} else{
z<-z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
if(coin==1){
z<-z+1
} else{
z<-z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
if(coin==1){
z<-z+1
} else{
z<-z-1
}
}
z<-5
print(paste("This took ",z," seconds")
)
print(paste("This took",z,"seconds")
)
print(paste("This took"z"seconds"))
help("paste")
paste(1:12)
paste(1:12,sep="")
paste("This took",z,"seconds")
paste("This took",z,"seconds", sep="")
paste("This took ",z," seconds", sep="")
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",z,"steps to complete your walk")
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",z,"steps to complete your walk"))
}
}
z<-5
counter
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
counter=counter+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",z,"steps to complete your walk"))
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",i,"steps to complete your walk"))
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",i,"steps to complete your walk"))
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",i,"steps to complete your walk"))
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",i,"steps to complete your walk"))
}
}
z<-5
i=0
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,.5)
i=i+1
if(coin==1){
z<-z+1
} else{
z<-z-1
}
if(z<3 | z>10){
print(paste("This took",i,"steps to complete your walk"))
}
}
add2<-function(x,y){
x+y
}
add2(2,3)
add2(111829,20398)
above10<-function(x){
use <-x>10
x[use]
}
above<-function(x,n){
use<-x>n
x[n]
}
x<-[1:20]
x<-[1:20]
x<-1:20
above10(x)
above(x)
above(x,4)
above10<-function(x){
use <-x>10
x[use]
}
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,4)
above10<-function(x){
use <-x>10
x[use]
}
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
columnmean<-functoion(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
airquality
columnmean(airquality)
help(mean)
columnmean<-function(y,removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,FALSE)
mydata<-rnorm(100)
sd(mydata)
sd(x=mydata)
sd(x=mydata,na.rm=FALSE)
sd(na.rm=FALSE,x=mydata)
sd(na.rm=FALSE,mydata)
args(paste)
paste()
paste
cat
args(cat)
cat
search()
make.power<-function(n){
pow<-function(x){
x^n
}
pow
}
cube<-make.power(3)
square<-make.power(2)
cube(3)
square(23)
ls(environment(cube))
get("n",environment(cube))
get("pow",environment(cube))
set.seed(1); normals<-rnorm(100,1,2)
nLL<-make.NegLogLik(normals)
cube<-function(x,n){}
cube<-function(x,n){}
cube<-function(x,n){
x^3
}
cube(3)
as.Date("1970-06-01")
unclass(as.Date("1970-06-01"))
x<-1:10
if(x>5){x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
environment(g)
environment(g())
environment(f)
environment(g)
environment(f(g))
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
environment(f)
library(datasets)
data(iris)
iris
head(iris)
split(iris,iris$Species)
laaply(split(iris$Sepal.Length,iris$Species),mean)
lapply(split(iris$Sepal.Length,iris$Species),mean)
sapply(split(iris$Sepal.Length,iris$Species),mean)
?tapply
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,nrow)
tapply(iris$Sepal.Length,iris$Species,nrows)
nrow
tapply(iris$Sepal.Length,iris$Species,length)
tapply(iris$Sepal.Length[complete.cases(iris)],iris$Species,length)
iris[300]
iris[[300]]
iris[2,150]
iris[150,2]
iris[150,1]
iris[150,1]<-NA
tapply(iris$Sepal.Length[complete.cases(iris)],iris$Species,length)
tapply(iris$Sepal.Length[complete.cases(iris)],iris$Species[complete.cases(iris)],length)
?download.file
download.file("http://rstudio-pubs-static.s3.amazonaws.com/13396_c2b31645b0154f02a918b6679c4c9b2c.html","D:\\Data_Science_Specialization\\Reproducible_Research\\Week 3\\Lectures\\testfile.txt")
download.file("http://rpubs.com/rdpeng/13396","D:\\Data_Science_Specialization\\Reproducible_Research\\Week 3\\Lectures\\testfile.txt")
setwd("D:\Data_Science_Specialization\Reproducible_Research\Course Project 1\RepData_PeerAssessment1")
setwd("D:\\Data_Science_Specialization\\Reproducible_Research\\Course Project 1\\RepData_PeerAssessment1")
library(knitr)
library("knitr")
install.packages("knitr")
library(knitr)
knit2html("PA1_template.Rmd")
